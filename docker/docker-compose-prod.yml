version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: ururu-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - ururu-blue
      - ururu-green

  ururu-blue:
    image: juwon0909/ururu:blue
    container_name: ururu-blue
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - .env

  ururu-green:
    image: juwon0909/ururu:green
    container_name: ururu-green
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - .env

  # Prometheus (메트릭 수집)
  prometheus:
    image: prom/prometheus:latest
    container_name: ururu-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus-prod.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana (대시보드)
  grafana:
    image: grafana/grafana:latest
    container_name: ururu-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro

volumes:
  prometheus_data:
  grafana_data:
